getwd()
getwd()
setwd("Users/Bruce/Data Science/Data-Science/RepData_PeerAssessment1")
setwd("Users/Bruce/Data Science")
setwd("C:/Users/Bruce/Data Science/Data-Science")
setwd("./RepData-PeerAssessment1")
setwd("../RepData-PeerAssessment1")
setwd("C:/Users/Bruce/Data Science/Data-Science/RepData_PeerAssessment1")
clear
clean()
activity_data <- read.csv(file = "activity.csv", header = TRUE)
?read.csv
library(dplyr)
?tbl_def
library(data.table)
install.packages("data.table")
classes(activity_data)
library("knitr", lib.loc="~/R/win-library/3.2")
head(activity_data)
activity_data.colClasses()
str(activity_data)
activity_data$date <- as.Date(activity_data$date)
str(activity_data)
hist(activity_data$steps)
activity_data$day <- weekdays(activity_data$date)
str(activity_data)
unique(activity_data$day)
Sys.setlocale(category="LC_TIME", locale="C")
activity_data <- read.csv(file ="activity.csv", header = TRUE)
#The date column is transformed from Factor to date
activity_data$date <- as.Date(activity_data$date)
activity_data$day <- weekdays(activity_data$date)
unique(activity_data$day)
?sapply
?group_by
count_per_day <- group_by(activity_data, day)
summarize(count_per_day,sum(steps))
summarize(count_per_day,sum(steps, na.rm=TRUE))
hist(activity_data$steps, main="Distribution of the step range", xlab="Steps (1 bar = 50 steps", col="blue")
count_per_day
mean_basis <- summarize(count_per_day,sum(steps, na.rm=TRUE))
mean_basis
mean_basis <- summarize(count_per_day, steps = sum(steps, na.rm=TRUE))
mean_basis
mean(mean_basis$steps)
?median
median(mean_basis$steps)
plot(activity_data$interval,mean(activity_data$steps))
average_per_interval <- group_by(activity_data, interval)
average <- summarize(average_per_interval,mean(steps))
average
average <- summarize(average_per_interval,mean(steps, na.rm=TRUE))
average
average <- summarize(average_per_interval, average=mean(steps, na.rm=TRUE))
average
plot(average$interval,average$average, type="l", main="Average number of steps per interval accross all days", xlab="Interval", ylab="Average")
?order
average[order(average[,2], decreasing = TRUE)]
ordered_average <- average[order(average$average, decreasing = TRUE)]
ordered_average
average[order(average$average, decreasing = TRUE)]
average[800:1000]
average
average[1]â—˜
average[1]
average[1,]
average[800:1000,]
ordered_average <- average[order(average$average,decreasing =T)]
ordered_average
max_interval <- max(average$average)
max_interval
average[average$average == max_interval]
filter(average, average == max_interval)
sum(is.na(activity_data$steps))
activity_data$steps <- as.numeric(apply(activity_data, 1, function (x) ifelse( is.na(x[1]),
tapply(activity_data$steps, activity_data$interval, mean, na.rm=TRUE)[x[3]] ,x[1])))
activity_data
activity_data <- read.csv(file ="activity.csv", header = TRUE)
#The date column is transformed from Factor to date
activity_data$date <- as.Date(activity_data$date)
activity_data$day <- weekdays(activity_data$date)
activity_data
head(activity_data)
activity_data$steps[is.na(activity_data$steps)] <-     ave(activity_data$steps,activity_data$interval,FUN=function(x)mean(x,na.rm = T))[is.na(activity_data$steps)]
head(activity_data)
hist(activity_data$steps, main="Distribution of the step range", xlab="Steps (1 bar = 50 steps", col="blue")
activity_data <- read.csv(file ="activity.csv", header = TRUE)
#The date column is transformed from Factor to date
activity_data$date <- as.Date(activity_data$date)
activity_data$day <- weekdays(activity_data$date)
#The date column is transformed from Factor to date
activity_data$date <- as.Date(activity_data$date)
activity_data$day <- weekdays(activity_data$date)
```
activity_data <- read.csv(file ="activity.csv", header = TRUE)
#The date column is transformed from Factor to date
activity_data$date <- as.Date(activity_data$date)
activity_data$day <- weekdays(activity_data$date)
complete_activity <- activity_data
complete_activity$steps[is.na(complete_activity$steps)] <-     ave(complete_activity$steps,complete_activity$interval,FUN=function(x)mean(x,na.rm = T))[is.na(complete_activity$steps)]
count_per_day2 <- group_by(complete_activity, day)
summarize(count_per_day2,sum(steps, na.rm=TRUE))
hist(complete_activity$steps, main="Distribution of the step range", xlab="Steps (1 bar = 50 steps", col="blue")
mean_basis2 <- summarize(count_per_day2, steps = sum(steps, na.rm=TRUE))
mean(mean_basis2$steps)
median(mean_basis2$steps)
mean(mean_basis$steps)
median(mean_basis$steps)
activity_data$weekday <- "Weekday"
activity_data
activity_data$weekday[activity_data$day == "Saturday"] <- "Weekend"
head(activity_data, 20)
head(subset(activity_data$day == "Saturday"))
?subset
head(subset(activity_data, day == "Saturday"))
activity_data$weekday[activity_data$day == "Sunday"] <- "Weekend"
activity_data$weekday <- as.factor(activity_data$weekday)
library(lattice)assertthat
library(lattice)
?xyplot
final_groupby = group_by(activity_data, weekday, interval)
summarize(final_group_by, mean(steps, na.rm=TRUE))
summarize(final_groupby, mean(steps, na.rm=TRUE))
summarize(final_groupby, average=mean(steps, na.rm=TRUE))
xyplot(final_groupby$average ~ final_groupby$interval | final_groupby$weekday, type="l", layout=c(1,2), xlab="Interval", ylab="Number of steps")
final_groupby
final_graph <- summarize(final_groupby, average=mean(steps, na.rm=TRUE))
xyplot(final_graph$average ~ final_graph$interval | final_graph$weekday, type="l", layout=c(1,2), xlab="Interval", ylab="Number of steps")
?knit2html
knit2html(input="PA1_template.Rmd")
knit2html(input="PA1_template.Rmd")
